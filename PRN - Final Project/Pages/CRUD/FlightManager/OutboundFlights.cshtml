@page
@model PRN___Final_Project.Pages.CRUD.FlightManager.OutboundFlightsModel
@{
    ViewData["Title"] = "Outbound Flights";
    var businessClassType = Model.ClassTypesConfig.Business;
    var economyClassType = Model.ClassTypesConfig.Economy;
}

<h1 class="display-3 fw-bold py-5">Outbound Flights</h1>

<div class="card rounded-4 shadow p-4" style="background-color: rgba(255, 255, 255, 0.5);">
    <div class="row g-0">
        <!-- Cột 1: Origin và Destination -->
        <div class="px-5 col d-flex justify-content-center align-items-center">
            <div class="row w-100">
                <!-- Cột 1.1: Origin -->
                <div class="col-4 d-flex flex-column justify-content-center align-items-center">
                    <span class="display-6 fw-bold">@Model.OriginLocation</span>
                </div>

                <!-- Cột 1.2: Thanh ngang -->
                <div class="col-4 d-flex flex-column justify-content-center align-items-center">
                    @if (Model.IsOneWay)
                    {
                        <span>................................... <i class="fa fa-plane"></i></span>
                    }
                    else
                    {
                        <span>................................... <i class="fa fa-plane"></i></span>
                        <span><i class="fa fa-plane" style="transform: scaleX(-1);"></i> ...................................</span>
                    }
                </div>


                <!-- Cột 1.3: Destination -->
                <div class="col-4 d-flex flex-column justify-content-center align-items-center">
                    <span class="display-6 fw-bold">@Model.DestinationLocation</span>
                </div>
            </div>
        </div>

        <!-- Thanh dọc chia giữa Cột 1 và Cột 2 -->
        <div class="col-auto d-flex justify-content-center align-items-center">
            <div style="border-left: 2px solid #ccc; height: 100%;"></div>
        </div>

        <!-- Cột 2: Thông tin chuyến bay -->
        <div class="col-3 d-flex justify-content-center align-items-center">
            <div class="row w-100">
                <!-- Cột 2.1: Outbound flight -->
                <div class="col d-flex flex-column justify-content-center align-items-center">
                    <p class="h3 fw-bold">Outbound Flight</p>
                    <p>@Model.DepartureDate.ToString("dddd, dd MMM")</p>
                </div>

                <!-- Cột 2.2: Return flight -->
                <div class="col d-flex flex-column justify-content-center align-items-center">
                    <p class="h3 fw-bold">Return Flight</p>
                    <p>@Model.ReturnDate?.ToString("dddd, dd MMM")</p>
                </div>
            </div>
        </div>

        <!-- Thanh dọc chia giữa Cột 2 và Cột 3 -->
        <div class="col-auto d-flex justify-content-center align-items-center">
            <div style="border-left: 2px solid #ccc; height: 100%;"></div>
        </div>

        <!-- Cột 3: Số lượng hành khách -->
        <div class="col-2 d-flex justify-content-center align-items-center">
            <div class="row w-100">
                <div class="col-12 d-flex flex-column justify-content-center align-items-center">
                    <p class="h3 fw-bold">Passengers</p>
                    <div class="d-flex flex-row justify-content-center align-items-center gap-3">
                        <p>Adult: @Model.AdultNum</p>
                        <p>Child: @Model.ChildNum</p>
                        <p>Baby: @Model.BabyNum</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Thanh dọc chia giữa Cột 2 và Cột 3 -->
        <div class="col-auto d-flex justify-content-center align-items-center">
            <div style="border-left: 2px solid #ccc; height: 100%;"></div>
        </div>

        <!-- Cột 4: Tổng tiền -->
        <div class="col-2 d-flex justify-content-center align-items-center">
            <div class="row w-100">
                <div class="col-12 d-flex flex-column justify-content-center align-items-center" style="position: relative;">
                    <p class="h3 fw-bold">
                        Total
                        <!-- Icon information -->
                        <i class="fa fa-info-circle ms-2" id="infoIcon" style="cursor: pointer;"></i>
                    </p>
                    <span id="totalAmount" class="h4 text-danger fw-bold">
                        @string.Format("{0:N0}", Model.OutboundTotalPrice) đồng
                    </span>
                    <!-- Information box -->
                    <div id="infoBox" class="info-box">
                        <p><strong>Giá vé máy bay theo độ tuổi:</strong></p>
                        <ul>
                            <li><strong>Dưới 2 tuổi (Baby):</strong> 10% giá vé người lớn.</li>
                            <li><strong>Từ 2 tuổi đến 12 tuổi (Child):</strong> 90% giá vé người lớn.</li>
                            <li><strong>Trên 12 tuổi (Adult):</strong> 100% giá vé người lớn.</li>
                            <li><strong>Lưu ý:</strong>  Giá vé được hiển thị là giá vé người lớn.</li>
                        </ul>
                        <p><strong>Thành tiền:</strong></p>
                        <p id="totalPriceDetails"></p>
                    </div>
                </div>
            </div>
        </div>

        <style>
            /* Ẩn box thông tin mặc định */
            .info-box {
                display: none;
                position: absolute;
                top: 100%; /* Đặt vị trí box bên dưới icon */
                left: 0;
                padding: 10px;
                background-color: #fff;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
                width: 300px; /* Chiều rộng của box */
                z-index: 100;
            }

            /* Hiển thị box khi hover vào icon hoặc vào vùng chứa icon */
            .col-12:hover #infoBox {
                display: block;
            }

            /* Đảm bảo cha của icon có position relative để box thông tin không bị lệch */
            .col-12 {
                position: relative;
            }
        </style>

    </div>
</div>

<div class="row py-5 d-flex justify-content-center align-items-center">
    @foreach (var flight in Model.Flights)
    {
        <div class="card mb-3 px-0 rounded-4 shadow" style="max-width: 60%;">
            <div class="row g-0">
                <!-- Cột 1: Thời gian khởi hành và điểm đến -->
                <div class="p-5 col d-flex justify-content-center align-items-center">
                    <div class="row w-100">
                        <!-- Departure and Origin -->
                        <div class="col-4 d-flex flex-column justify-content-center align-items-center">
                            <h1 class="fw-bold">@flight.DepartureDateTime.ToString("HH:mm")</h1>
                            <h4>@flight.Origin.LocationName</h4>
                        </div>

                        <!-- Thanh ngang -->
                        <div class="col-4 d-flex justify-content-center align-items-center">
                            <span>...................................</span>
                        </div>

                        <!-- Arrival and Destination -->
                        <div class="col-4 d-flex flex-column justify-content-center align-items-center">
                            <h1 class="fw-bold">@flight.ArrivalDateTime.ToString("HH:mm")</h1>
                            <h4>@flight.Destination.LocationName</h4>
                        </div>
                    </div>
                </div>

                <!-- Thanh dọc ngăn cách giữa cột 1 và cột 2 -->
                <div class="col-auto d-flex justify-content-center align-items-center">
                    <div style="border-left: 2px solid #ccc; height: 75%;"></div>
                </div>

                <!-- Cột 2: Duration và Plane Name -->
                <div class="p-5 col-3 d-flex flex-column justify-content-center">
                    <p>
                        <i class="fa fa-hourglass-half"></i>
                        @{
                            var duration = flight.ArrivalDateTime - flight.DepartureDateTime;
                            var hours = (int)duration.TotalHours;
                            var minutes = duration.Minutes;
                            <span>@($"{hours}h {minutes}m")</span>
                        }
                    </p>
                    <p>
                        <i class="fa fa-plane"></i>
                        @flight.Plane.PlaneName
                    </p>
                    <p>
                        <i class="fa fa-info-circle"></i>
                        @flight.FlightNumber
                    </p>
                </div>

                <div class="col-1 btn-group dropend">
                    <button class="btn btn-secondary dropdown-toggle rounded-start-0 rounded-end-4"
                            type="button"
                            id="dropdownMenuButton_@flight.FlightId"
                            data-bs-toggle="dropdown"
                            aria-expanded="false"
                            onclick="resetFormSelection(@flight.FlightId)">
                        <h4 class="fw-bold">Select Class</h4>
                    </button>

                    <!-- Individual form for each flight -->
                    <form method="post" id="flightForm_@flight.FlightId" onsubmit="return validateForm(@flight.FlightId)">
                        <input type="hidden" name="FlightId" value="@flight.FlightId" />
                        <input type="hidden" name="SelectedClass" id="SelectedClass_@flight.FlightId" value="" />
                        <input type="hidden" name="SelectedPrice" id="SelectedPrice_@flight.FlightId" value="" />

                        <ul class="dropdown-menu p-0" aria-labelledby="dropdownMenuButton_@flight.FlightId">
                            <li>
                                <!-- Economy Class Option -->
                                <div class="form-check d-flex flex-column justify-content-center align-items-center gap-3 rounded-0 btn btn-primary w-100 h-100">
                                    <input class="form-check-input" style="margin: auto;width: 15px;height: 15px; @(flight.AvailableNormalSeat < Model.TotalPassengers ? "display: none;" : "")"
                                           type="radio"
                                           name="ClassType"
                                           value="Economy"
                                           onclick="setClassType('Economy', @flight.BasePrice, @flight.FlightId)" />
                                    <h2 class="form-check-label display-6 fw-bold" for="economyRadio_@flight.FlightId">
                                        Economy Class
                                    </h2>
                                    <h5 class="fw-bold">@string.Format("{0:N0} đồng", flight.BasePrice * 10000)</h5>
                                    <h5 class="fw-bold">@flight.AvailableNormalSeat seats left</h5>
                                </div>
                            </li>
                            <li>
                                <!-- Business Class Option -->
                                <div class="form-check d-flex flex-column justify-content-center align-items-center gap-3 rounded-0 btn btn-success w-100 h-100">
                                    <input class="form-check-input" style="margin: auto;width: 15px;height: 15px; @(flight.AvailableVipSeat < Model.TotalPassengers ? "display: none;" : "")"
                                           type="radio"
                                           name="ClassType"
                                           value="Business"
                                           onclick="setClassType('Business', @flight.BasePrice, @flight.FlightId)" />
                                    <h2 class="form-check-label display-6 fw-bold" for="businessRadio_@flight.FlightId">
                                        Business Class
                                    </h2>
                                    <h5 class="fw-bold">@string.Format("{0:N0} đồng", flight.BasePrice * 1.4m * 10000)</h5>
                                    <h5 class="fw-bold">@flight.AvailableVipSeat seats left</h5>
                                </div>
                            </li>
                            <li>
                                <!-- Next button to submit the form -->
                                <button type="submit" class="rounded-0 text-white btn btn-warning w-100"><h4 class="fw-bold">Next</h4></button>
                            </li>
                        </ul>
                    </form>
                    <script>
                        // Lưu trữ giá trị tổng tiền ban đầu
                        var previousTotalPrice = @Model.TotalPrice;

                        // Hàm tính toán tổng tiền khi chọn loại vé
                        function updateTotalPrice(flightId) {
                            var adultNum = @Model.AdultNum;
                            var childNum = @Model.ChildNum;
                            var babyNum = @Model.BabyNum;

                            var selectedClass = document.querySelector('input[name="ClassType"]:checked');
                            if (selectedClass) {
                                var classType = selectedClass.value;

                                // Lấy giá vé đã chọn từ input ẩn
                                var selectedPriceField = document.getElementById('SelectedPrice_' + flightId);
                                var selectedPrice = parseFloat(selectedPriceField.value);

                                // Tính tổng tiền
                                var totalPrice = previousTotalPrice + (adultNum + (childNum * 0.9) + (babyNum * 0.1)) * selectedPrice;

                                // Cập nhật totalPrice vào giao diện
                                document.getElementById('totalAmount').textContent = totalPrice.toLocaleString() + ' đồng';

                                // Cập nhật phần tử với id "totalPriceDetails" để hiển thị chi tiết và tổng thành tiền
                                document.getElementById('totalPriceDetails').innerHTML = `
                                                            Outbound Flight: ${selectedPrice.toLocaleString()} * (${adultNum} + ${childNum} * 90% + ${babyNum} * 10%) = ${totalPrice.toLocaleString()} đồng
                                `;
                            }
                        }

                        // Lắng nghe sự kiện thay đổi khi người dùng chọn loại vé (Radio button)
                        document.querySelectorAll('input[name="ClassType"]').forEach(function (radio) {
                            radio.addEventListener('change', function () {
                                var flightId = this.closest('form').getAttribute('id').split('_')[1]; // Lấy flightId từ id của form
                                updateTotalPrice(flightId);  // Cập nhật tổng tiền sau khi thay đổi lựa chọn
                            });
                        });

                        // Sự kiện nhấn nút quay về (reset lại tổng tiền cũ)
                        document.getElementById('backButton').addEventListener('click', function () {
                            document.getElementById('totalAmount').textContent = previousTotalPrice.toLocaleString() + ' đồng';
                        });
                    </script>

                </div>
            </div>
        </div>
    }
</div>

<script>
    // JavaScript function to set the selected class type and price in hidden fields for each flight
    function setClassType(classType, basePrice, flightId) {
        var selectedClassField = document.getElementById('SelectedClass_' + flightId);
        var selectedPriceField = document.getElementById('SelectedPrice_' + flightId);

        selectedClassField.value = classType;
        var selectedPrice = classType === 'Business' ? basePrice * 1.4 : basePrice;
        selectedPriceField.value = selectedPrice * 10000; // Assuming price needs to be multiplied by 1000 for display
    }

    // JavaScript function to reset the selections when the dropdown is clicked
    function resetFormSelection(flightId) {
        var form = document.getElementById('flightForm_' + flightId);
        var radios = form.querySelectorAll('input[type="radio"]');

        // Uncheck all radio buttons
        radios.forEach(function (radio) {
            radio.checked = false;
        });

        // Reset the hidden fields
        document.getElementById('SelectedClass_' + flightId).value = '';
        document.getElementById('SelectedPrice_' + flightId).value = '';
    }

    // Validate the form to ensure that a class is selected before submitting
    function validateForm(flightId) {
        var form = document.getElementById('flightForm_' + flightId);
        var selectedClass = document.getElementById('SelectedClass_' + flightId).value;

        if (!selectedClass) {
            alert('Please select a class before proceeding.');
            return false; // Prevent form submission
        }
        return true; // Allow form submission
    }
</script>
