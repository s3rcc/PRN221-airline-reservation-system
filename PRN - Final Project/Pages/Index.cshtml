@page
@model IndexModel
@{
    ViewData["Title"] = "Home Page";
}


<div class="row">
    <div class="col-md-5">
        <div class="left-side">
            <div class="logo mb-4">
                <img src="~/img/logo.png" alt="Flight Template" class="img-fluid">
            </div>
            <div class="tabs-content">
                <h4>Choose Your Direction:</h4>
                <ul class="list-unstyled social-links">
                    <li class="mb-2">
                        <a href="https://facebook.com" class="text-decoration-none">
                            Find us on <em>Facebook</em> <i class="fa fa-facebook"></i>
                        </a>
                    </li>
                    <li class="mb-2">
                        <a href="https://youtube.com" class="text-decoration-none">
                            Our <em>YouTube</em> Channel <i class="fa fa-youtube"></i>
                        </a>
                    </li>
                    <li class="mb-2">
                        <a href="https://instagram.com" class="text-decoration-none">
                            Follow our <em>Instagram</em> <i class="fa fa-instagram"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <div class="col-md-5 offset-md-1">
        <section id="first-tab-group" class="tabgroup">
            <div id="tab1">
                <div class="submit-form">
                    <h4 style="justify-content: center; display: flex;">
                        FIND YOUR FLIGHT
                    </h4>

                    <!-- Trip type (Radio buttons) -->
                    <div class="mb-3 d-flex align-items-center gap-5">
                        <label class="form-label">Flight type:</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="tripType" id="oneWay" value="oneWay" checked onclick="toggleReturnDate(true)">
                            <label class="form-check-label" for="oneWay">One Way</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="tripType" id="roundTrip" value="roundTrip" onclick="toggleReturnDate(false)">
                            <label class="form-check-label" for="roundTrip">Round Trip</label>
                        </div>
                    </div>

                    <!-- Filter Form -->
                    <form id="form-submit" method="post">
                        <input type="hidden" id="isOneWay" name="isOneWay" value="true" />
                        <input type="hidden" id="totalPassengers" name="totalPassengers" value="1" />
                        <input type="hidden" id="adultNum" name="adultNum" value="1" />
                        <input type="hidden" id="childNum" name="childNum" value="0" />
                        <input type="hidden" id="babyNum" name="babyNum" value="0" />
                        <div class="row g-3">
                            <!-- From -->
                            <div class="col-md-6">
                                <label for="from" class="form-label">From:</label>
                                <select id="from" name="originId" class="form-select" required>
                                    <option value="">Select a location...</option>
                                    @foreach (var location in Model.Locations)
                                    {
                                        <option value="@location.LocationID">@location.LocationName</option>
                                    }
                                </select>
                            </div>

                            <!-- To -->
                            <div class="col-md-6">
                                <label for="to" class="form-label">To:</label>
                                <select id="to" name="destinationId" class="form-select" required>
                                    <option value="">Select a location...</option>
                                    @foreach (var location in Model.Locations)
                                    {
                                        <option value="@location.LocationID">@location.LocationName</option>
                                    }
                                </select>
                            </div>

                            <!-- Departure Date -->
                            <div class="col-md-6">
                                <label for="departure" class="form-label">Departure date:</label>
                                <input type="date" id="departure" name="departureDate" class="form-control date" required />
                            </div>

                            <!-- Return Date -->
                            <div class="col-md-6" id="returnDateField" style="display:none;">
                                <label for="return" class="form-label">Return date:</label>
                                <input type="date" id="return" name="returnDate" class="form-control date" />
                            </div>

                            <!-- Passenger Dropdown -->
                            <div class="col-md-12">
                                <label for="passenger" class="form-label">Passenger:</label>
                                <div class="dropdown">
                                    <button class="btn btn-secondary" type="button" id="passengerDropdown" aria-expanded="false" onclick="toggleDropdown()">
                                        <span id="passengerCount">1 Passenger</span>
                                    </button>
                                    <ul class="dropdown-menu" id="passengerDropdownMenu" style="display: none;">
                                        <li class="d-flex align-items-center justify-content-between p-4">
                                            <label class="m-0">Adults (12+ years)</label>
                                            <div class="d-flex align-items-center">
                                                <button type="button" class="btn btn-sm btn-outline-secondary m-0" onclick="decreasePassenger('adults')">-</button>
                                                <span class="px-2" id="adultsCount">1</span>
                                                <button type="button" class="btn btn-sm btn-outline-secondary m-0" onclick="increasePassenger('adults')">+</button>
                                            </div>
                                        </li>
                                        <li class="d-flex align-items-center justify-content-between p-4">
                                            <label class="m-0">Children (2-12 years)</label>
                                            <div class="d-flex align-items-center">
                                                <button type="button" class="btn btn-sm btn-outline-secondary m-0" onclick="decreasePassenger('children')">-</button>
                                                <span class="px-2" id="childrenCount">0</span>
                                                <button type="button" class="btn btn-sm btn-outline-secondary m-0" onclick="increasePassenger('children')">+</button>
                                            </div>
                                        </li>
                                        <li class="d-flex align-items-center justify-content-between p-4">
                                            <label class="m-0 pe-3">Babys (under 2 years)</label>
                                            <div class="d-flex align-items-center">
                                                <button type="button" class="btn btn-sm btn-outline-secondary m-0" onclick="decreasePassenger('babys')">-</button>
                                                <span class="px-2" id="babysCount">0</span>
                                                <button type="button" class="btn btn-sm btn-outline-secondary m-0" onclick="increasePassenger('babys')">+</button>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <style>
                                .dropdown-menu {
                                    position: absolute;
                                    top: 100%;
                                    left: 0;
                                    z-index: 1000;
                                    display: none;
                                    float: left;
                                    min-width: 10rem;
                                    padding: .5rem 0;
                                    margin: 0;
                                    font-size: 1rem;
                                    color: #212529;
                                    text-align: left;
                                    background-color: #fff;
                                    border: 1px solid rgba(0, 0, 0, 0.15);
                                    border-radius: .25rem;
                                    box-shadow: 0 .25rem .5rem rgba(0, 0, 0, 0.1);
                                }

                                    .dropdown-menu li {
                                        padding: 0.5rem;
                                    }

                                    .dropdown-menu button {
                                        width: 30px;
                                        text-align: center;
                                    }
                            </style>

                            <!-- Submit Button -->
                            <div class="col-md-12 text-center">
                                <button type="submit" class="btn btn-primary">Filter Flights</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </section>
    </div>
</div>


@section Scripts {
    <script>
        // Function to toggle dropdown visibility
        function toggleDropdown() {
            const dropdownMenu = document.getElementById('passengerDropdownMenu');
            dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
        }

        // Functions to increase or decrease the passenger count
        function increasePassenger(type) {
            const countElement = document.getElementById(`${type}Count`);
            let count = parseInt(countElement.innerText);
            const adultsCount = parseInt(document.getElementById('adultsCount').innerText);
            const childrenCount = parseInt(document.getElementById('childrenCount').innerText);
            const babysCount = parseInt(document.getElementById('babysCount').innerText);

            if (type === 'adults' && count < 9) {
                countElement.innerText = ++count;
                resetChildrenAndBabys();
            } else if (type === 'adults' && count >= 9) {
                alert("Maximum of 9 adults allowed.");
            }

            if (type === 'children' && (childrenCount + babysCount) < (adultsCount * 2)) {
                countElement.innerText = ++count;
            } else if (type === 'children') {
                alert("Total number of children and babys cannot exceed double the number of adults.");
            }

            if (type === 'babys' && babysCount < adultsCount) {
                countElement.innerText = ++count;
            } else if (type === 'babys') {
                alert("Number of babys cannot exceed the number of adults.");
            }

            updatePassengerCount();
        }

        function decreasePassenger(type) {
            const countElement = document.getElementById(`${type}Count`);
            let count = parseInt(countElement.innerText);
            if (count > 0) {
                countElement.innerText = --count;

                // Only reset children and babies count when adults are increased
                if (type === 'adults') {
                    resetChildrenAndBabys();
                }

                updatePassengerCount();
            }
        }

        // Reset children and babys count to 0
        function resetChildrenAndBabys() {
            document.getElementById('childrenCount').innerText = 0;
            document.getElementById('babysCount').innerText = 0;
        }

        // Function to update the total passenger count display
        function updatePassengerCount() {
            const adultsCount = parseInt(document.getElementById('adultsCount').innerText);
            const childrenCount = parseInt(document.getElementById('childrenCount').innerText);
            const babysCount = parseInt(document.getElementById('babysCount').innerText);
            const totalPassengers = adultsCount + childrenCount + babysCount;

            document.getElementById('passengerCount').innerText = `${totalPassengers} Passenger(s)`;

            // Update the hidden fields for each passenger type
            document.getElementById('adultNum').value = adultsCount;
            document.getElementById('childNum').value = childrenCount;
            document.getElementById('babyNum').value = babysCount;

            // Update the total passengers hidden field
            document.getElementById('totalPassengers').value = totalPassengers;
        }

        function toggleReturnDate(isOneWay) {
            var returnDateField = document.getElementById("returnDateField");
            var isOneWayInput = document.getElementById("isOneWay");

            if (isOneWay) {
                returnDateField.style.display = "none";
                document.getElementById("return").value = ""; // Clear return date if one-way is selected
                isOneWayInput.value = "true";  // Set IsOneWay to true
            } else {
                returnDateField.style.display = "block";
                isOneWayInput.value = "false"; // Set IsOneWay to false
            }
        }

        // Function to set minimum dates for departure and return date inputs
        function setMinimumDates() {
            const today = new Date();

            // Ngày mai cho DepartureDate
            const departureMinDate = new Date(today);
            departureMinDate.setDate(today.getDate() + 1); // Ngày mai

            // Ngày lớn hơn 2 ngày hiện tại cho ReturnDate
            const returnMinDate = new Date(today);
            returnMinDate.setDate(today.getDate() + 2); // Sau 2 ngày

            // Format the dates to YYYY-MM-DD
            const formattedDepartureDate = departureMinDate.toISOString().split('T')[0];
            const formattedReturnDate = returnMinDate.toISOString().split('T')[0];

            // Set the min attributes for departure and return date inputs
            document.getElementById('departure').setAttribute('min', formattedDepartureDate);
            document.getElementById('return').setAttribute('min', formattedReturnDate);
        }

        // Call the setMinimumDates function on page load
        window.onload = function () {
            setMinimumDates(); // Set the minimum date for date inputs
            var oneWaySelected = document.getElementById("oneWay").checked;
            toggleReturnDate(oneWaySelected); // Ensure the return date field visibility is correct
        };

        function toggleReturnDate(isOneWay) {
            var returnDateField = document.getElementById("returnDateField");
            var isOneWayInput = document.getElementById("isOneWay");

            if (isOneWay) {
                returnDateField.style.display = "none";
                document.getElementById("return").value = ""; // Clear return date nếu chọn One Way
                isOneWayInput.value = "true";  // Set IsOneWay = true
            } else {
                returnDateField.style.display = "block";
                document.getElementById("return").setAttribute('min', document.getElementById("departure").value); // Cập nhật 'min' cho ngày về
                isOneWayInput.value = "false"; // Set IsOneWay = false
            }
        }

        // Lắng nghe sự kiện thay đổi ngày đi để cập nhật ngày về
        document.getElementById("departure").addEventListener("change", function () {
            const departureDate = this.value;
            const returnDateInput = document.getElementById("return");

            // Cập nhật 'min' cho ngày về
            if (returnDateInput) {
                returnDateInput.setAttribute("min", departureDate);
            }
        });
    </script>
}