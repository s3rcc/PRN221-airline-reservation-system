@page
@model PRN___Final_Project.Pages.StatisticsModel
@{
	ViewData["Title"] = "Statistics";
	Layout = "_DashboardLayout";
}

<h2>Airline Report</h2>
<div class="container mt-4">
    <div class="row">
        <!-- Total Revenue Card -->
        <div class="col-md-4">
            <div class="card text-white bg-primary mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Revenue</h5>
                    <p class="card-text">@Model.TotalRevenue.ToString("C")</p>
                </div>
            </div>
        </div>

        <!-- Total Bookings Card -->
        <div class="col-md-4">
            <div class="card text-white bg-success mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Bookings</h5>
                    <p class="card-text">@Model.TotalBookings</p>
                </div>
            </div>
        </div>

        <!-- Total Airplanes Card -->
        <div class="col-md-4">
            <div class="card text-white bg-warning mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Airplanes</h5>
                    <p class="card-text">@Model.TotalAirplanes</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Total Flights Card -->
        <div class="col-md-4">
            <div class="card text-white bg-info mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Flights</h5>
                    <p class="card-text">@Model.TotalFlights</p>
                </div>
            </div>
        </div>

        <!-- Total Pilots Card -->
        <div class="col-md-4">
            <div class="card text-white bg-danger mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Pilots</h5>
                    <p class="card-text">@Model.TotalPilots</p>
                </div>
            </div>
        </div>

        <!-- Total Users Card -->
        <div class="col-md-4">
            <div class="card text-white bg-secondary mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Users</h5>
                    <p class="card-text">@Model.TotalUsers</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <!-- Filter options -->
    <form method="get">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="yearFilter">Select Year:</label>
                <input type="number" id="yearFilter" name="year" class="form-control" value="@Model.SelectedYear" />
            </div>
            <div class="col-md-6">
                <label for="startDate">Select Date Range:</label>
                <div class="d-flex">
                    <input type="date" id="startDate" name="startDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
                    <input type="date" id="endDate" name="endDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
                </div>
            </div>
        </div>

        <!-- Buttons to apply filters -->
        <div class="row mb-4">
            <div class="col-md-6">
                <button type="submit" class="btn btn-primary">Apply Filters</button>
            </div>
        </div>
    </form>

    <!-- Charts -->
    <div class="row">
        <!-- Booking Chart -->
        <div class="col-md-6">
            <h5>Total Bookings</h5>
            <canvas id="bookingChart"></canvas>
        </div>

        <!-- Revenue Chart -->
        <div class="col-md-6">
            <h5>Total Revenue</h5>
            <canvas id="revenueChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        window.onload = function () {
            var ctxBooking = document.getElementById('bookingChart').getContext('2d');
            var ctxRevenue = document.getElementById('revenueChart').getContext('2d');

            var bookingChart = new Chart(ctxBooking, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Labels)), // Date labels dynamically passed from the model
                    datasets: [{
                        label: 'Bookings',
                        data: @Html.Raw(Json.Serialize(Model.Bookings)), // Booking data from the model
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            var revenueChart = new Chart(ctxRevenue, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Labels)), // Date labels dynamically passed from the model
                    datasets: [{
                        label: 'Revenue',
                        data: @Html.Raw(Json.Serialize(Model.Revenue)), // Revenue data from the model
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        };
    </script>
}